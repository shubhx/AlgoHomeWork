package com.Algorithms.Bubble_Sort;

import java.util.Arrays;


/*Return an array that contains the exact same numbers as the given array,
 * but rearranged so that all the even numbers come before all the odd numbers.
 * Other than that, the numbers can be in any order.
 * You may modify and return the given array, or make a new array.

    evenOdd([1, 0, 1, 0, 0, 1, 1]) → [0, 0, 0, 1, 1, 1, 1]
    evenOdd([3, 3, 2]) → [2, 3, 3]
    evenOdd([2, 2, 2]) → [2, 2, 2] */

public class EvenOdd {
    public EvenOdd() {
        super();
    }
    
    static void evenOddSort(int a []){
        for (int j = 0; j <a.length; j++){
        for(int i = 0; i < a.length-1-j; i++){
            if(!(a[i]% 2==0)){
            a[i] = a[i] + a[i+1];
            a[i+1]  = a[i] - a[i+1]; 
            a[i]  = a[i] - a[i+1];
            }
            }
        }
        }
    
    public static void main(String Str[]){
            int a[] = {3,4,3,5,2,6,7};
            evenOddSort(a);
            System.out.println(Arrays.toString(a));
        }
    
}
